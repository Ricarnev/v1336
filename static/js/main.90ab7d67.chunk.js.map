{"version":3,"sources":["reducers/reducer.js","utils/index.js","components/ListComponent.jsx","components/pagination/page/Page.jsx","components/pagination/Pagination.jsx","App.js","reducers/index.js","store.js","index.js"],"names":["SET_CURRENT_PAGE","GET_ITEMS","SET_TOTAL_COUNT","FILTER_ITEMS_BY_CONNECTION","FILTER_ITEMS_BY_DEPARTMENT","initState","items","data","currentPage","perPage","totalCount","length","filterByConnection","localStorage","getItem","pages","total","pageNumbers","i","Math","ceil","push","calcPages","filterByDepID","filterItemsByConnection","state","type","payload","filterItemsByDepartment","depId","ListComponent","brigId","brigName","connection","depName","posName","posCluster","posWell","header","dispatch","expandAll","useDispatch","className","value","onChange","e","target","onClick","Page","id","handleClick","parseInt","connect","brigades","props","map","item","renderPages","count","filter","connection_state","department","slice","brigade_name","name","position","field","cluster","well","renderBrigades","rootReducer","combineReducers","action","setItem","composedEnhancers","compose","applyMiddleware","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90ab7d67.chunk.js","sourcesContent":["import data from '../data/data.json';\r\nimport { calcPages } from '../utils';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst GET_ITEMS = 'GET_ITEMS';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst FILTER_ITEMS_BY_CONNECTION = 'FILTER_ITEMS_BY_CONNECTION';\r\nconst FILTER_ITEMS_BY_DEPARTMENT = 'FILTER_ITEMS_BY_DEPARTMENT';\r\n\r\nconst initState = {\r\n  items: data,\r\n  currentPage: 1,\r\n  perPage: 20,\r\n  totalCount: data.length,\r\n  filterByConnection: localStorage.getItem('byConnection') ? localStorage.getItem('byConnection') : 'all',\r\n  pages: calcPages(data.length),\r\n  filterByDepID: localStorage.getItem('byDepID') ? localStorage.getItem('byDepID') : 'all',\r\n}\r\n\r\nexport function brigades(state = initState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload\r\n      }\r\n      case GET_ITEMS:\r\n        return{\r\n          ...state\r\n        }\r\n        case FILTER_ITEMS_BY_CONNECTION:\r\n          localStorage.setItem('byConnection', action.payload);\r\n          return{\r\n            ...state,\r\n            filterByConnection: action.payload\r\n          }\r\n          case FILTER_ITEMS_BY_DEPARTMENT:\r\n            localStorage.setItem('byDepID', action.payload);\r\n            return{\r\n              ...state,\r\n              filterByDepID: action.payload\r\n            }\r\n    case SET_TOTAL_COUNT:\r\n      return{\r\n        ...state,\r\n        totalCount: action.payload\r\n      }\r\n      default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, payload: page })\r\nexport const getItems = () => ({ type: GET_ITEMS });\r\nexport const setTotalCount = (count) => ({ type: SET_TOTAL_COUNT, payload: count });\r\nexport const filterItemsByConnection = (state) => ({type: FILTER_ITEMS_BY_CONNECTION, payload: state});\r\nexport const filterItemsByDepartment = (depId) => ({type: FILTER_ITEMS_BY_DEPARTMENT, payload: depId});","export const calcPages = (total, perPage = 20) => {\r\n    const pageNumbers = [];\r\n      for (let i = 1; i <= Math.ceil(total / perPage); i++) {\r\n          pageNumbers.push(i);\r\n      }\r\n      return pageNumbers;\r\n  }","import './ListComponent.css';\r\nimport {filterItemsByConnection, filterItemsByDepartment} from '../reducers/reducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport function ListComponent({brigId, brigName, connection, depId, depName, posName, posCluster, posWell, header, filterByDepID, filterByConnection, expandAll}){\r\n    const dispatch = useDispatch();\r\n\r\n    function ResetFilters() {\r\n        dispatch(filterItemsByConnection('all'));\r\n        dispatch(filterItemsByDepartment('all'))\r\n    }\r\n\r\n    if(header){\r\n        return(\r\n            <div className=\"list-component flex\">\r\n                <p>По состоянию связи</p>\r\n                <select value={filterByConnection} onChange={e => dispatch(filterItemsByConnection(e.target.value))}>\r\n                    <option value={'all'} >Все</option>\r\n                    <option value={1} >На связи</option>\r\n                    <option value={0} >Нет связи</option>\r\n                </select>\r\n                <p>По подразделению</p>\r\n                <select value={filterByDepID} onChange={(e) => dispatch(filterItemsByDepartment(e.target.value))}>\r\n                    <option value={'all'}>Все</option>\r\n                    <option value={0}>Лукойл (0)</option>\r\n                    <option value={1}>Роснефть (1)</option>\r\n                    <option value={2}>Газпром нефть (2)</option>\r\n                </select>\r\n                <button onClick={() => ResetFilters()} className={'reset-btn'}>Сбросить фильтры</button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className={'list-component'}>\r\n            <div className={connection === 1 ? 'connection on' : 'connection off'} />\r\n            <p>{brigId}</p>\r\n            <p>{brigName}</p>\r\n            <p>{depName} <span> ({depId})</span></p>\r\n            <p>{posName}</p>\r\n            <p>{posCluster}</p>\r\n            <p>{posWell}</p>\r\n        </div>\r\n    )\r\n}","export function Page({id, currentPage, handleClick}){\r\n\r\n    return(\r\n        <li\r\n        className={parseInt(currentPage) === id ? 'active page' : 'page'}\r\n        key={id}\r\n        id={id}\r\n        onClick={() => handleClick(id)}\r\n    >\r\n        {id}\r\n    </li>\r\n    )\r\n}","import { connect, useDispatch } from 'react-redux';\r\nimport { setCurrentPage } from '../../reducers/reducer';\r\nimport { Page } from './page/Page';\r\nimport './Pagination.css';\r\n\r\nfunction Pagination(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = (id) => {\r\n        dispatch(setCurrentPage(id));\r\n    }\r\n\r\n    const renderPages = () => {\r\n        const pages = [];\r\n        for(let i = 0; i < Math.ceil(props.totalCount / 20); i++){\r\n            pages.push(i+1);\r\n        }\r\n        if(props.currentPage > pages.length){\r\n            handleClick(1)\r\n        }\r\n        return pages.map(item => <Page key={item} id={item} currentPage={props.currentPage} handleClick={handleClick}/>)\r\n    }\r\n\r\n    return (\r\n        <ul className='pagination'>\r\n            {renderPages()}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        totalCount: state.brigades.totalCount,\r\n      currentPage: state.brigades.currentPage\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps,)(Pagination);","import { connect, useDispatch } from 'react-redux';\nimport { ListComponent } from './components/ListComponent';\nimport Pagination from './components/pagination/Pagination';\nimport {\n  setTotalCount\n} from \"./reducers/reducer\";\n\nfunction App(props) {\n  const dispatch = useDispatch();\n\n  const renderBrigades = () => {\n  let brigades = [...props.items];\n    if(props.filterByConnection === '0' || props.filterByConnection === '1'){\n    brigades = brigades.filter(item => item.connection_state === parseInt(props.filterByConnection));\n  }\n  if(props.filterByDepID === '0' || props.filterByDepID === '1' || props.filterByDepID === '2'){\n    brigades = brigades.filter(item => item.department.id === parseInt(props.filterByDepID));\n  }\n  dispatch(setTotalCount(brigades.length));\n  brigades = brigades.slice((props.currentPage * 20 - 20), (props.currentPage * 20));\n    return brigades.map(item => <ListComponent key={item.id} brigId={item.id} brigName={item.brigade_name} connection={item.connection_state} depName={item.department.name} depId={item.department.id} posName={item.position.field} posCluster={item.position.cluster} posWell={item.position.well} />)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className={'header-text'}>Тестовое задание В-1336</h1>\n        <div className='brigades-list'>\n          <ListComponent header={true} filterByDepID={props.filterByDepID} filterByConnection={props.filterByConnection}/>\n          <div className=\"list-component columns-header\">\n            <p>Состояние связи с бригадой</p>\n            <p>Идентификатор бригады</p>\n            <p>Наименование бригады</p>\n            <p>Наименование подразделения <span> (Идентификатор подразделения)</span></p>\n            <p>Месторождение</p>\n            <p>Номер куста</p>\n            <p>Номер скважины</p>\n          </div>\n          {renderBrigades()}\n        </div>\n        <Pagination />\n      </div>\n  );\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    items: state.brigades.items,\n    currentPage: state.brigades.currentPage,\n    perPage: state.brigades.perPage,\n    totalCount: state.brigades.totalCount,\n    filterByDepID: state.brigades.filterByDepID,\n    filterByConnection: state.brigades.filterByConnection\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\r\nimport { brigades } from './reducer';\r\nexport const rootReducer = combineReducers({\r\n    brigades\r\n});","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport { rootReducer } from './reducers';\r\n\r\nconst initialState = {};\r\nconst enhancers = [];\r\nconst composedEnhancers = compose(\r\n applyMiddleware(),\r\n ...enhancers,\r\n);\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composedEnhancers\r\n   );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n<Provider store={store}>\n      <App/>\n   </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}